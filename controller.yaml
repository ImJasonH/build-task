apiVersion: v1
kind: Namespace
metadata:
  name: build-task
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-task-controller
  namespace: build-task
  labels:
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: build-task-controller-cluster-access
  labels:
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
rules:
  # Read-only access to all Run CRs.
  - apiGroups: ["tekton.dev"]
    resources: ["runs"]
    verbs: ["get", "list", "watch"]
  # Read-write access to all Run statuses.
  - apiGroups: ["tekton.dev"]
    resources: ["runs/status"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

  # Controller needs permission to emit events associated with Run CRs.
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

  # Access to create and manage BuildRuns.
  - apiGroups: ["shipwright.io"]
    resources: ["buildruns"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: build-task-controller
  namespace: build-task
  labels:
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["list", "watch"]
  # The controller needs access to these configmaps for logging information and runtime configuration.
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["config-logging", "config-observability", "config-leader-election"]
  # We uses leases for leaderelection
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: build-task-controller
  namespace: build-task
  labels:
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
subjects:
  - kind: ServiceAccount
    name: build-task-controller
    namespace: build-task
roleRef:
  kind: Role
  name: build-task-controller
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: build-task-controller-cluster-access
  labels:
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
subjects:
  - kind: ServiceAccount
    name: build-task-controller
    namespace: build-task
roleRef:
  kind: ClusterRole
  name: build-task-controller-cluster-access
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: build-task
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
data:
  # Common configuration for all knative codebase
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }

  # Log level overrides
  loglevel.controller: "info"
  loglevel.webhook: "info"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: build-task-controller
  namespace: build-task
  labels:
    app.kubernetes.io/name: build-task-controller
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: devel
    app.kubernetes.io/part-of: build-task
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: build-task-controller
      app.kubernetes.io/component: build-task-controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: build-task
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: build-task-controller
        app.kubernetes.io/component: build-task-controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/version: devel
        app.kubernetes.io/part-of: build-task
        app: build-task-controller
    spec:
      serviceAccountName: build-task-controller
      containers:
      - name: build-task-controller
        image: ko://github.com/imjasonh/build-task/cmd/controller
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # If you are changing these names, you will also need to update
        # the controller's Role in 200-role.yaml to include the new
        # values in the "configmaps" "get" rule.
        - name: CONFIG_LOGGING_NAME
          value: config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: build-task-controller
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: devel
    app.kubernetes.io/part-of: build-task
    # tekton.dev/release value replaced with inputs.params.versionTag in pipeline/tekton/publish.yaml
    pipeline.tekton.dev/release: "devel"
    # labels below are related to istio and should not be used for resource lookup
    app: build-task-controller
    version: "devel"
  name: build-task-controller
  namespace: build-task
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: build-task-controller
    app.kubernetes.io/component: build-task-controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: build-task
